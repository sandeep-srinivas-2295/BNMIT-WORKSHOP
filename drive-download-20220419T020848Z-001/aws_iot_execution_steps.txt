AWS IOT prerequisties installation

#Install the dependant packages
sudo apt-get install libxml2 libxml2-dev bison flex libcdk5-dev libavahi-client-dev cmake build-essential git

#Create a iot virtualenv
mkvirtualenv iot -p python3.8

#Create a setenv shell script file to set env for iot virtualenv
nano setenv.sh

# virtualenv and virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.8
source /usr/local/bin/virtualenvwrapper.sh

#Run these commands in terminal
chmod +x setenv.sh
./setenv.sh
deactivate
workon iot

#Install dependant packages
pip3 install adafruit-circuitpython-dht
pip3 install AWSIoTPythonSDK

sudo apt-get install libgpiod2
E: Unable to locate package libgpiod2

#Run this if you get above error
wget http://ftp.cn.debian.org/debian/pool/main/libg/libgpiod/libgpiod2_1.2-3_armhf.deb
sudo dpkg -i libgpiod2_1.2-3_armhf.deb

#Clone the github project
mkdir iot
cd iot
git clone https://github.com/aws/aws-iot-device-sdk-python.git

#Download the root CA cert file
curl https://www.amazontrust.com/repository/AmazonRootCA1.pem > root-CA.crt

#Make a copy of the basicPubSub file
cp /home/pi/iot/aws-iot-device-sdk-python/samples/basicPubSub/basicPubSub.py tempsens.py

#Login to AWS dashboard from your RaspberryPi
Search for "IOT Core" and open it
Expand "Manage" and click on "Things"

Click on "Create things"
Select "Create single thing" option and click on Next
Give a name to thing. For example: team1-thing
Click on Next
Select "Auto-generate a new certificate" option
Click on Next and then click on "Create thing"

It will show a window to download the certificates and keys
Make sure to download all the files

#Create a policy
Expand "Secure" from left window and click on "Policies"
Click on Create policy
Give a name to policy. For example: team1-policy
Under Policy action, select the option *
Under Policy resource, type as *
Click on create

#DynamoDB
Search for "DynamoDB" and open it
Give a Table name. For example: team1_DB
For Partition key give as timeStamp and select the type as String
For Sort key give as temperature and select the type as Number

#Create a Rule
Go to IOT dashboard
Expand "Act" from left window and click on "Rules"
Give a Rule name. For example: team1rule
Scroll down and click on "Add action"
Select "Insert a message into a DynamoDB table"
Under Partition key, give as time
Under Partition key type, give as STRING
Under Partition key value, give as $timeStamp
Click on create role. Under Choose resource select the team1_db
Give name as team1_db_role and click on create
Next click on "Create" to create the rule

#Attach the policy to certificates
Expand "Secure" from left window and click on "Certificates"


#Certs
Create a directory named certs under iot and move the cert files into it

#Rename the cert files
mv "AmazonRootCA1 (4).pem" AmazonRootCA1.pem
mv c81ec8d76b6b05d-certificate.pem.crt team1-certificate.pem.crt
mv c81ec8d76b6b05d-private.pem.key team1-private.pem.key


cd iot
./setenv.sh
workon iot

#Run below command to get the AWS IOT endpoint
aws iot describe-endpoint --region ap-south-1

#Run below command to publish data to iot topic
python3 tempsens.py -e a36pj9iva98udn.iot.ap-south-1.amazonaws.com -r certs/root-CA.crt -c certs/team1-certificate.pem.crt -k certs/team1-private.pem.key -t iot/topic